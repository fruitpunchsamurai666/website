[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_EX/Hands-on_Ex1.html",
    "href": "Hands-on_EX/Hands-on_Ex1.html",
    "title": "Hands-on_Ex1",
    "section": "",
    "text": "Hands-on_Ex1"
  },
  {
    "objectID": "In-class_EX/In-class_Ex03.html",
    "href": "In-class_EX/In-class_Ex03.html",
    "title": "In-class-ex03",
    "section": "",
    "text": "test test test"
  },
  {
    "objectID": "In-class_EX/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_EX/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "load packages\n\n\npacman::p_load(plotly, gt, patchwork, ggstatsplot, tidyverse, ggside, parameters,rstatix,patchwork)\n\n\nload dataset\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nqq plot\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data, aes(sample=ENGLISH))+stat_qq()+stat_qq_line()\n\nsw_t <- exam_data %>% \n  shapiro_test(ENGLISH)%>% \n  gt()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line, this is a clear indication that the set of data is not normally distributed."
  },
  {
    "objectID": "In-class_EX/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_EX/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "load package\n\n\npacman::p_load(jsonlite,tidygraph, ggraph, visNetwork, tidyverse) \n\n\nread JSON file\n\n\nMC1 <- jsonlite::fromJSON(\"D:/MITB/ISSS608/fruitpunchsamurai666/project/MC1/data/MC1.json\")\n\n\nread nodes and edge dataframe from JSON\n\n\n#read the sub-dataframe from the json file, select and rearrange the columns needed\nMC1_nodes <- as_tibble(MC1$nodes) %>% select(id, type, country)\nMC1_edges <- as_tibble(MC1$links) %>% select(source, target, type, weight, key)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications homepage.\nThis page contains all my coursework prepared for the SMU MITB course ISSS608 Visual Analytics and Applications - 2023 April Term."
  },
  {
    "objectID": "Take-home_EX/Take-home_Ex1.html",
    "href": "Take-home_EX/Take-home_Ex1.html",
    "title": "Take-home Exercise 1",
    "section": "",

    "text": "In this take-home exercise, you are required to apply the concepts and methods you had learned in Lesson 1-4 to reveal the demographic and financial characteristics of the city of Engagement by using appropriate static and interactive statistical graphics methods. This exercise requires a user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns.\n\n\n\n\n\n\n    pacman::p_load(patchwork, tidyverse, ggstatsplot, ggdist, gganimate, png, gt,plotly, ggstatsplot, ggside, parameters,rstatix,reshape2, gridExtra,ggpmisc,ggscatterstats,ggplot2,ungeviz,treemap,ggridges, viridis)\n\n\n    fin_data <- read_csv(\"data/FinancialJournal.csv\")\n    part_data <- read_csv(\"data/Participants.csv\")\n\n\n\n\n\nchange data types\n\n#change participantId to characters\nfin_data$participantId <- as.character(fin_data$participantId)\npart_data$participantId <- as.character(part_data$participantId)\n\n#change education level to ordinal\npart_data$educationLevel <- factor(part_data$educationLevel, ordered=TRUE, levels=c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\",\"Graduate\"))\n\nchange the format of timestamp\n\n#save the datetime into date and month 2 formats\nfin_data$timestamp <- format(as.Date(fin_data$timestamp), \"%Y-%m-%d\")\nfin_data$year_mth <- format(as.Date(fin_data$timestamp), \"%Y-%m\")\n\ncreate a new table by converting financial journal to wide format (participantId as rows and categories as columns)\n\n# Convert financial journal to wide format\nwide_fin <- pivot_wider(fin_data, id_cols = participantId, names_from = category, values_from = amount, values_fn = sum)\n\n# fill in NA with 0s (i.e. no transaction) in the resultant table\nwide_fin[is.na(wide_fin)] <- 0\n\njoin the wide format financial journal table with the participant table by participantId\n\nmerged_df <- merge(part_data, wide_fin, by = 'participantId')\n\ncalculate total income, total expenses and final balance (sum of all categories) for each participant\n\nmerged_df$expenses <- rowSums(merged_df[, c(\"Education\", \"Food\", \"Recreation\",\"Shelter\")])\nmerged_df$income <- rowSums(merged_df[, c(\"RentAdjustment\",\"Wage\")])\nmerged_df$balance <- rowSums(merged_df[, c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\")])\n\nNormality check and qq plot\n\n\nJoviality qq plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(merged_df, aes(sample=joviality))+stat_qq()+stat_qq_line()\n\nsw_t <- merged_df%>% \n  shapiro_test(joviality)%>% \n  gt()\n\n\n\n\n\nFinancial summary qq plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(merged_df, aes(sample=balance))+stat_qq()+stat_qq_line()\n\nsw_t <- merged_df%>% \n  shapiro_test(balance)%>% \n  gt()\n\n\n\n\nWe can see that the points from both joviality and financial balance deviate significantly from the straight diagonal line, this is a clear indication that they are not normally distributed.\n\nOutlier removal and histogram\nThis step is to remove “expenses” and “income” outliers. (to retain more data, I adjusted the 75%(Q3)/25%(Q1) quantile to 90%/10% quantile in the outlier formula respectively.\n\n# Calculating the upper limit and Interquartile range for \"expenses\" and \"income\"\n\nIQR_income = IQR(merged_df$income)\nIQR_exp = IQR(merged_df$expenses)\n\nincome_upper = quantile(merged_df$income,probs = 0.9)+1.5*IQR_income\nexp_lower = quantile(merged_df$expenses,probs = 0.1)-1.5*IQR_exp\n\n\n# Filtering out the outliers (too high income or expenses)\nmerged <-  merged_df %>%\n           filter ((income <= income_upper) &\n          (expenses >= exp_lower))\n\n\n\n\nShow Code\n#income histogram after outlier removal\nmean_income = mean(merged$income)\nstd_income = sd(merged$income)\n\nincome_hist <- ggplot(merged, aes(income))+\n  geom_histogram(aes(y=..density..), fill = '#133337', color = '#eeeeee')+\n  stat_function(fun = dnorm, args = list(mean = mean_income, sd = std_income), col=\"#66cccc\", size = .7)+\n   xlim(0, 200000)+\n  \n  labs(title = 'Income histogram after outlier removal', \n       x = \"total income\")+\n  \n  theme_minimal()+\n  \n  theme(plot.title = element_text(hjust = 0.1, size = 10, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        plot.caption = element_text(face = \"italic\", size = 10),\n        panel.background = element_rect(fill = 'white'),\n        panel.grid.major.x = element_line(linewidth = 0.25, linetype = 'dashed', colour = '#bebebe'),\n        axis.text.x = element_text(face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5,face = \"bold\"))\n\n#expenses histogram after outlier removal\nmean_exp = mean(merged$expenses)\nstd_exp = sd(merged$expenses)\n\nexpenses_hist <- ggplot(merged, aes(expenses))+\n  geom_histogram(aes(y=..density..), fill = '#133337', color = '#eeeeee')+\n  stat_function(fun = dnorm, args = list(mean = mean_exp, sd = std_exp), col=\"#66cccc\", size = .7)+\n   xlim(-35000, 0)+\n  labs(title = 'Expenses histogram after outlier removal', \n       x = \"total expenses\")+\n  \n  theme_minimal()+\n  \n  theme(plot.title = element_text(hjust = 0.1, size = 10, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        plot.caption = element_text(face = \"italic\", size = 10),\n        panel.background = element_rect(fill = 'white'),\n        panel.grid.major.x = element_line(linewidth = 0.25, linetype = 'dashed', colour = '#bebebe'),\n        axis.text.x = element_text(face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5,face = \"bold\"))\n\nincome_hist + expenses_hist\n\n\n\n\n\n\n\n\n\n\n\nFrom this line plot, we observe:\n\nHouseholdsize 3 has the highest total income (wage+rental adjustment).\nTotal expenses (absolute value) increases as household size increases, which is expected.\nHouseholdsize 1 has the most balance (total income - expenses).\n\n\n\nShow Code\n#add a column to store absolute value of total expense\nmerged$expenses_abs <- abs(merged$expenses)\n\n#filter income, expenses and balance columns and change to long format\nmerged_long <- merged %>% \n  select(householdSize,income,expenses_abs,balance) %>% \n  group_by(householdSize)%>% \n   summarise(avg_income = mean(income),\n              avg_expenses = mean(expenses_abs),\n              avg_balance = mean(balance)) %>%\n  pivot_longer(cols = c(\"avg_income\", \"avg_expenses\", \"avg_balance\"), names_to = \"type\", values_to = \"amount\") %>% \n  ungroup() \n\n#line plot \nline_p1 <-merged_long %>%\n  ggplot(aes(x = householdSize, y = amount, colour = type))+\n  geom_smooth(alpha = 0.1) +\n  theme_classic() +\n  labs(title = \"Total income, expenses and balance VS household size\", x = 'household size', y = 'Total income, expenses and balance') +\n  scale_x_continuous(breaks = seq(0, 3, by = 1)) +\n  theme(plot.title = element_text(hjust = 0.1, size = 10, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        plot.caption = element_text(face = \"italic\", size = 10),\n        panel.grid.major.y = element_line(linewidth = 0.25, color = \"#bebebe\",linetype = 'dashed'),\n        panel.background = element_rect(fill = 'white'),\n        panel.grid.major.x = element_line(linewidth = 0.25, linetype = 'dashed', colour = '#bebebe'),\n        axis.text.x = element_text(face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5 ,face = \"bold\"))\n\nline_p1\n\n\n\n\n\n\n\n\nAn interactive box plot is used to better visualize the expenses of different age groups. A new “age_groups” column was added with 10 years’ interval.\nFrom the box plot, observed that:\n\nAge group “<20” has the highest average expense across all categories.\nAge group “21-30” has the lowest average expense across all categories.\nThe participant with the maximum expense (32.6k) is from 31-40 group.\n\n\n\nShow Code\n# create age_groups with labels\nmerged$age_groups <- cut(merged$age, \n                  breaks = c(10, 20, 30, 40, 50, 60), \n                  labels = c(\"<20\",\"21-30\", \"31-40\", \"41-50\", \"51-60\"))\n\n#income box plot\nt <- list(\n  family = \"Garamond\",\n  size = 19,\n  face = \"bold\")\n\nt1 <- list(\n  family = \"Garamond\",\n  size = 15,\n  face = \"bold\")\n\nbox <- plot_ly(\n  data = merged,\n  y = ~expenses_abs,\n  type = \"box\",\n  color = ~age_groups,\n  showlegend = FALSE,\n  boxmean = TRUE\n) %>% \n  layout(title= list(text = \"Box plot of total expenses in thousands by age group\",font = t1),\n         xaxis = list(title = list(text ='Age Group', font = t1)),\n         yaxis = list(title = list(text ='Total expenses in thousands', font = t1)))\n\nbox\n\n\n\n\n\n\n\n\n\nTo further understand the spending behaviors of each age group, a stacked bar chart is used to visualize the proportion of the average expenses (i.e. education, food, recreation and shelter).\nHowever from the stacked bar chart, there is not much spending behavior difference observed across the five age groups. The biggest proportion is always shelter, followed by recreation, food, and lastly education. The proportion for recreation and food is comparable, while education only contributes a small portion to total expense.\n\n\nShow Code\n#calculate avg of each expense category by age group, then change the table to long format\nmerged_aggregated <- merged %>%\n  group_by(age_groups) %>%\n    summarise(avg_education = mean(Education),\n              avg_food = mean(Food),\n              avg_recreation = mean(Recreation),\n              avg_shelter = mean(Shelter)) %>%\n  ungroup() %>% \n  mutate(across(c(avg_education, avg_food, avg_recreation, avg_shelter), abs))%>% \n  pivot_longer(cols = c(avg_education, avg_food, avg_recreation, avg_shelter), names_to = \"type\", values_to = \"value\")\n\n\n#plot the stacked bar chart\nbar <- ggplot(merged_aggregated, \n                aes(age_groups, value, fill = type)) + \n  geom_bar(stat=\"identity\") +\n  scale_fill_manual(values=c(\"#6666FF\", \"#99FFCC\", \"#FF99CC\",\"#FFCC99\"))+\n\n  labs(title = \"Proportion of Flat types by Planning area in Singapore\", x = \"Planning Area\", y = \"Count\", fill = \"Flat Type\") +\n  \n  theme_minimal() +\n  \n  theme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.4, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        axis.text = element_text(size = 8, face = \"bold\"),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\")) \n\nggplotly(bar)\n\n\n\n\n\n\n\n\n\nAfter visualizing expenses VS age group, I am also interested in the expense patterns with education level and interest group.\nIn this section, a treemap is used for a quick overall glimpse of expenses across different education levels and interest groups. Graduate and bachelors are having higher expenses than college or lower education level. Interest group B/F has relatively high proportion across all education levels.\n\n\nShow Code\n#calculate average expenses for different education level and interest groups\nmerged_aggr_tree <- merged %>%\n  group_by(educationLevel,interestGroup) %>%\n    summarise(avg_expenses = mean(expenses_abs)) %>%\n  ungroup()\n\n#plot treemap with size and color both representing expenses\ntreemap_area <- treemap (merged_aggr_tree,\n        index= c(\"educationLevel\",\"interestGroup\"),\n        vSize= \"avg_expenses\",\n        vColor = \"avg_expenses\",\n        type=\"value\",\n        palette = \"RdYlGn\",\n        border.col = c(\"black\", \"white\"),\n        title=\"expenses by educationLevel and interest group\",\n        title.legend = \"Average Expenses\"\n        )\n\n\n\n\n\n\n\n\nHypothetical Outcome Plot (HOP) are used to visualize the uncertainty of wage for different education levels.\nFrom the plot below, we can see that most of the time, bachelors and graduates can earn more than low or high school/college education level.\n\n\nShow Code\n#Wage VS education level HOP\nhop <- ggplot(data = merged, \n   (aes(x = educationLevel, \n        y = Wage))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                         group = educationLevel), \n          height = 0.6, \n          color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)\n\nanim_save('hop_animation.gif',hop)\nhop\n\n\n\n\n\n\n\n\nScatter plot is used to investigate which category among the 6 has good correlation with joviality.\nThere is no good correlation between joviality and education, food or shelter. While recreation shows positive correlation with joviality, the more the participants spend on recreation, the happier they are. Surprisingly wage and joviality are in negative correlation.\n\n\nShow Code\n# Define y as joviality\ny_var <- merged$joviality\n\n# Define x as the 6 categories (absolute value)\nx_vars <- merged[, c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\")] %>%\n  mutate(across(c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\"), abs))\n\n# Reshape the data to long format\ndf <- reshape2::melt(cbind.data.frame(x_vars, y_var), id.vars = \"y_var\")\n\n# Create the plot\ncor <- ggplot(df,aes(x = value, y = y_var)) +\n  geom_point(size = 1) +\n  coord_cartesian(ylim=c(0, 1))+\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~ variable, scales = \"free_x\", ncol = 3) +\n  labs(x = NULL, y = \"joviality\") +\n  ggtitle(\"joviality correlation scatter plot\") +\n  theme(plot.margin = margin(1, 1, 1, 1, \"cm\"))\n\ncor\n\n\n\n\n\n\n\n\nSince recreation shows a relatively good correlation with joviality, I did below animation to know about how recreation expenses changing over time.\nThe distribution of recreation expenses are more or less constant from early 2022 to early 2023, and it is slowly shifting right which means people tend to spend more on recreation over time.\n\n\nShow Code\n#filter recreation data and group by category \nfin_aggr <- fin_data %>%\n  mutate(year_mth = as.Date(paste(year_mth,\"-01\", sep=\"\"))) %>%\n  mutate(amount = abs(amount))%>%\n  filter(category %in% c(\"Recreation\"))%>%\n  group_by(category)%>%\n ungroup()\n\n#density ridge plot animation over time\ngg <- ggplot(data = fin_aggr, aes(x = amount, y = category, fill = after_stat(density))) +\n  \n  geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01, height = 5, width = 6) +\n  \n  theme_minimal() +\n    \n  labs(title = 'Recreation expenses {frame_time} ') +\n  transition_time(year_mth) +\n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10, angle = 360),\n  axis.text = element_text(size = 8)) +\n  scale_fill_viridis(name = \"amount\", option = \"D\") +\n  ease_aes('linear')\n\ngg"
    "text": "In this take-home exercise, you are required to apply the concepts and methods you had learned in Lesson 1-4 to reveal the demographic and financial characteristics of the city of Engagement by using appropriate static and interactive statistical graphics methods. This exercise requires a user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns.\n\n\n\n\n\n\npacman::p_load(patchwork, tidyverse, ggstatsplot, ggdist, gganimate, png, gt,plotly, ggstatsplot, ggside, parameters,rstatix,reshape2, gridExtra,ggpmisc,ggscatterstats,ggplot2,ungeviz,treemap,ggridges, viridis)\n\n\nfin_data <- read_csv(\"data/FinancialJournal.csv\")\npart_data <- read_csv(\"data/Participants.csv\")\n\n\n\n\n\nchange data types\n\n#change participantId to characters\nfin_data$participantId <- as.character(fin_data$participantId)\npart_data$participantId <- as.character(part_data$participantId)\n\n#change education level to ordinal\npart_data$educationLevel <- factor(part_data$educationLevel, ordered=TRUE, levels=c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\",\"Graduate\"))\n\nchange the format of timestamp\n\n#save the datetime into date and month 2 formats\nfin_data$timestamp <- format(as.Date(fin_data$timestamp), \"%Y-%m-%d\")\nfin_data$year_mth <- format(as.Date(fin_data$timestamp), \"%Y-%m\")\n\ncreate a new table by converting financial journal to wide format (participantId as rows and categories as columns)\n\n# Convert financial journal to wide format\nwide_fin <- pivot_wider(fin_data, id_cols = participantId, names_from = category, values_from = amount, values_fn = sum)\n\n# fill in NA with 0s (i.e. no transaction) in the resultant table\nwide_fin[is.na(wide_fin)] <- 0\n\njoin the wide format financial journal table with the participant table by participantId\n\nmerged_df <- merge(part_data, wide_fin, by = 'participantId')\n\ncalculate total income, total expenses and final balance (sum of all categories) for each participant\n\nmerged_df$expenses <- rowSums(merged_df[, c(\"Education\", \"Food\", \"Recreation\",\"Shelter\")])\nmerged_df$income <- rowSums(merged_df[, c(\"RentAdjustment\",\"Wage\")])\nmerged_df$balance <- rowSums(merged_df[, c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\")])\n\nNormality check and qq plot\n\n\n##Joviality qq plot\n\n\n\n\n\n##The code chunk\n\nqq <- ggplot(merged_df, aes(sample=joviality))+stat_qq()+stat_qq_line()\n\nsw_t <- merged_df%>% \n  shapiro_test(joviality)%>% \n  gt()\n\n\n\n##Financial summary qq plot\n\n\n\n\n\n##The code chunk\n\nqq <- ggplot(merged_df, aes(sample=balance))+stat_qq()+stat_qq_line()\n\nsw_t <- merged_df%>% \n  shapiro_test(balance)%>% \n  gt()\n\n\nWe can see that the points from both joviality and financial balance deviate significantly from the straight diagonal line, this is a clear indication that they are not normally distributed.\n\nOutlier removal and histogram\nThis step is to remove “expenses” and “income” outliers. (to retain more data, I adjusted the 75%(Q3)/25%(Q1) quantile to 90%/10% quantile in the outlier formula respectively.\n\n# Calculating the upper limit and Interquartile range for \"expenses\" and \"income\"\n\nIQR_income = IQR(merged_df$income)\nIQR_exp = IQR(merged_df$expenses)\n\nincome_upper = quantile(merged_df$income,probs = 0.9)+1.5*IQR_income\nexp_lower = quantile(merged_df$expenses,probs = 0.1)-1.5*IQR_exp\n\n\n# Filtering out the outliers (too high income or expenses)\nmerged <-  merged_df %>%\n           filter ((income <= income_upper) &\n          (expenses >= exp_lower))\n\n\n\n#income histogram after outlier removal\nmean_income = mean(merged$income)\nstd_income = sd(merged$income)\n\nincome_hist <- ggplot(merged, aes(income))+\n  geom_histogram(aes(y=..density..), fill = '#133337', color = '#eeeeee')+\n  stat_function(fun = dnorm, args = list(mean = mean_income, sd = std_income), col=\"#66cccc\", size = .7)+\n   xlim(0, 200000)+\n  \n  labs(title = 'Income histogram after outlier removal', \n       x = \"total income\")+\n  \n  theme_minimal()+\n  \n  theme(plot.title = element_text(hjust = 0.1, size = 10, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        plot.caption = element_text(face = \"italic\", size = 10),\n        panel.background = element_rect(fill = 'white'),\n        panel.grid.major.x = element_line(linewidth = 0.25, linetype = 'dashed', colour = '#bebebe'),\n        axis.text.x = element_text(face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5,face = \"bold\"))\n\n#expenses histogram after outlier removal\nmean_exp = mean(merged$expenses)\nstd_exp = sd(merged$expenses)\n\nexpenses_hist <- ggplot(merged, aes(expenses))+\n  geom_histogram(aes(y=..density..), fill = '#133337', color = '#eeeeee')+\n  stat_function(fun = dnorm, args = list(mean = mean_exp, sd = std_exp), col=\"#66cccc\", size = .7)+\n   xlim(-35000, 0)+\n  labs(title = 'Expenses histogram after outlier removal', \n       x = \"total expenses\")+\n  \n  theme_minimal()+\n  \n  theme(plot.title = element_text(hjust = 0.1, size = 10, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        plot.caption = element_text(face = \"italic\", size = 10),\n        panel.background = element_rect(fill = 'white'),\n        panel.grid.major.x = element_line(linewidth = 0.25, linetype = 'dashed', colour = '#bebebe'),\n        axis.text.x = element_text(face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5,face = \"bold\"))\n\nincome_hist + expenses_hist\n\n\n\n\n\n\n\n\n\n\nFrom this line plot, we observe:\n\nHouseholdsize 3 has the highest total income (wage+rental adjustment).\nTotal expenses (absolute value) increases as household size increases, which is expected.\nHouseholdsize 1 has the most balance (total income - expenses).\n\n\n#add a column to store absolute value of total expense\nmerged$expenses_abs <- abs(merged$expenses)\n\n#filter income, expenses and balance columns and change to long format\nmerged_long <- merged %>% \n  select(householdSize,income,expenses_abs,balance) %>% \n  group_by(householdSize)%>% \n   summarise(avg_income = mean(income),\n              avg_expenses = mean(expenses_abs),\n              avg_balance = mean(balance)) %>%\n  pivot_longer(cols = c(\"avg_income\", \"avg_expenses\", \"avg_balance\"), names_to = \"type\", values_to = \"amount\") %>% \n  ungroup() \n\n#line plot \nline_p1 <-merged_long %>%\n  ggplot(aes(x = householdSize, y = amount, colour = type))+\n  geom_smooth(alpha = 0.1) +\n  theme_classic() +\n  labs(title = \"Total income, expenses and balance VS household size\", x = 'household size', y = 'Total income, expenses and balance') +\n  scale_x_continuous(breaks = seq(0, 3, by = 1)) +\n  theme(plot.title = element_text(hjust = 0.1, size = 10, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        plot.caption = element_text(face = \"italic\", size = 10),\n        panel.grid.major.y = element_line(linewidth = 0.25, color = \"#bebebe\",linetype = 'dashed'),\n        panel.background = element_rect(fill = 'white'),\n        panel.grid.major.x = element_line(linewidth = 0.25, linetype = 'dashed', colour = '#bebebe'),\n        axis.text.x = element_text(face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5 ,face = \"bold\"))\n\nline_p1\n\n\n\n\n\n\n\nAn interactive box plot is used to better visualize the expenses of different age groups. A new “age_groups” column was added with 10 years’ interval.\nFrom the box plot, observed that:\n\nAge group “<20” has the highest average expense across all categories.\nAge group “21-30” has the lowest average expense across all categories.\nThe participant with the maximum expense (32.6k) is from 31-40 group.\n\n\n# create age_groups with labels\nmerged$age_groups <- cut(merged$age, \n                  breaks = c(10, 20, 30, 40, 50, 60), \n                  labels = c(\"<20\",\"21-30\", \"31-40\", \"41-50\", \"51-60\"))\n\n#income box plot\nt <- list(\n  family = \"Garamond\",\n  size = 19,\n  face = \"bold\")\n\nt1 <- list(\n  family = \"Garamond\",\n  size = 15,\n  face = \"bold\")\n\nbox <- plot_ly(\n  data = merged,\n  y = ~expenses_abs,\n  type = \"box\",\n  color = ~age_groups,\n  showlegend = FALSE,\n  boxmean = TRUE\n) %>% \n  layout(title= list(text = \"Box plot of total expenses in thousands by age group\",font = t1),\n         xaxis = list(title = list(text ='Age Group', font = t1)),\n         yaxis = list(title = list(text ='Total expenses in thousands', font = t1)))\n\nbox\n\n\n\n\n\n\n\n\nTo further understand the spending behaviors of each age group, a stacked bar chart is used to visualize the proportion of the average expenses (i.e. education, food, recreation and shelter).\nHowever from the stacked bar chart, there is not much spending behavior difference observed across the five age groups. The biggest proportion is always shelter, followed by recreation, food, and lastly education. The proportion for recreation and food is comparable, while education only contributes a small portion to total expense.\n\n#calculate avg of each expense category by age group, then change the table to long format\nmerged_aggregated <- merged %>%\n  group_by(age_groups) %>%\n    summarise(avg_education = mean(Education),\n              avg_food = mean(Food),\n              avg_recreation = mean(Recreation),\n              avg_shelter = mean(Shelter)) %>%\n  ungroup() %>% \n  mutate(across(c(avg_education, avg_food, avg_recreation, avg_shelter), abs))%>% \n  pivot_longer(cols = c(avg_education, avg_food, avg_recreation, avg_shelter), names_to = \"type\", values_to = \"value\")\n\n\n#plot the stacked bar chart\nbar <- ggplot(merged_aggregated, \n                aes(age_groups, value, fill = type)) + \n  geom_bar(stat=\"identity\") +\n  scale_fill_manual(values=c(\"#6666FF\", \"#99FFCC\", \"#FF99CC\",\"#FFCC99\"))+\n\n  labs(title = \"Proportion of Flat types by Planning area in Singapore\", x = \"Planning Area\", y = \"Count\", fill = \"Flat Type\") +\n  \n  theme_minimal() +\n  \n  theme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.4, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        axis.text = element_text(size = 8, face = \"bold\"),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\")) \n\nggplotly(bar)\n\n\n\n\n\n\n\n\nAfter visualizing expenses VS age group, I am also interested in the expense patterns with education level and interest group.\nIn this section, a treemap is used for a quick overall glimpse of expenses across different education levels and interest groups. Graduate and bachelors are having higher expenses than college or lower education level. Interest group B/F has relatively high proportion across all education levels.\n\n#calculate average expenses for different education level and interest groups\nmerged_aggr_tree <- merged %>%\n  group_by(educationLevel,interestGroup) %>%\n    summarise(avg_expenses = mean(expenses_abs)) %>%\n  ungroup()\n\n#plot treemap with size and color both representing expenses\ntreemap_area <- treemap (merged_aggr_tree,\n        index= c(\"educationLevel\",\"interestGroup\"),\n        vSize= \"avg_expenses\",\n        vColor = \"avg_expenses\",\n        type=\"value\",\n        palette = \"RdYlGn\",\n        border.col = c(\"black\", \"white\"),\n        title=\"expenses by educationLevel and interest group\",\n        title.legend = \"Average Expenses\"\n        )\n\n\n\n\n\n\n\nHypothetical Outcome Plot (HOP) are used to visualize the uncertainty of wage for different education levels.\nFrom the plot below, we can see that most of the time, bachelors and graduates can earn more than low or high school/college education level.\n\n#Wage VS education level HOP\nhop <- ggplot(data = merged, \n   (aes(x = educationLevel, \n        y = Wage))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                         group = educationLevel), \n          height = 0.6, \n          color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)\n\nanim_save('hop_animation.gif',hop)\nhop\n\n\n\n\n\n\n\nScatter plot is used to investigate which category among the 6 has good correlation with joviality.\nThere is no good correlation between joviality and education, food or shelter. While recreation shows positive correlation with joviality, the more the participants spend on recreation, the happier they are. Surprisingly wage and joviality are in negative correlation.\n\n# Define y as joviality\ny_var <- merged$joviality\n\n# Define x as the 6 categories (absolute value)\nx_vars <- merged[, c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\")] %>%\n  mutate(across(c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\"), abs))\n\n# Reshape the data to long format\ndf <- reshape2::melt(cbind.data.frame(x_vars, y_var), id.vars = \"y_var\")\n\n# Create the plot\nggplot(df,aes(x = value, y = y_var)) +\n  geom_point(size = 1) +\n  coord_cartesian(ylim=c(0, 1))+\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~ variable, scales = \"free_x\", ncol = 3) +\n  labs(x = NULL, y = \"joviality\") +\n  ggtitle(\"joviality correlation scatter plot\") +\n  theme(plot.margin = margin(1, 1, 1, 1, \"cm\"))\n\n\n\n\n\n\n\nSince recreation shows a relatively good correlation with joviality, I did below animation to know about how recreation expenses changing over time.\nThe distribution of recreation expenses are more or less constant from early 2022 to early 2023, and it is slowly shifting right which means people tend to spend more on recreation over time.\n\n\nshow code\n\n\n#filter recreation data and group by category \nfin_aggr <- fin_data %>%\n  mutate(year_mth = as.Date(paste(year_mth,\"-01\", sep=\"\"))) %>%\n  mutate(amount = abs(amount))%>%\n  filter(category %in% c(\"Recreation\"))%>%\n  group_by(category)%>%\n ungroup()\n\n\n#density ridge plot animation over time\ngg <- ggplot(data = fin_aggr, aes(x = amount, y = category, fill = after_stat(density))) +\n  \n  geom_density_ridges_gradient(scale = 5, rel_min_height = 0.01, height = 5, width = 6) +\n  \n  theme_minimal() +\n    \n  labs(title = 'Recreation expenses {frame_time} ') +\n  transition_time(year_mth) +\n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10, angle = 360),\n  axis.text = element_text(size = 8)) +\n  scale_fill_viridis(name = \"amount\", option = \"D\") +\n  ease_aes('linear')\n\n  gg"
  },
  {
    "objectID": "In-class_EX/In-class_Ex05/In-class_Ex05.html#part-2---network-visualization",
    "href": "In-class_EX/In-class_Ex05/In-class_Ex05.html#part-2---network-visualization",
    "title": "In-class Exercise 5",
    "section": "Part 2 - Network Visualization",
    "text": "Part 2 - Network Visualization\n\nload package\n\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\nread data\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\nWrangling time\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nWrangling attributes by grouping by source-target-day and then removing emails that are cc to senders or only has been sent once.\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  #ungroup() is a function in the dplyr package in R that removes grouping from a grouped data frame. When data is grouped, operations are applied to each group separately. ungroup() is used to reverse the grouping operation so that subsequent operations are applied to the entire data frame as a whole.\n  ungroup()\n\n\nbuild tidygraph data model and rearrange the rows by weight in descending order\n\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\n\nplot the graph without x and y axis using Fruchterman and Reingold layout\n\n\ng <- ggraph(GAStech_graph,layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\nworking with facet (edge as an example)\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\ninteractive network graph with visNetwork\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\n\n\n#shades the nodes by assigning unique colour to each category in the group field.\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  }
]