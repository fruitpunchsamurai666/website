[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_EX/Hands-on_Ex1.html",
    "href": "Hands-on_EX/Hands-on_Ex1.html",
    "title": "Hands-on_Ex1",
    "section": "",
    "text": "Hands-on_Ex1"
  },
  {
    "objectID": "In-class_EX/In-class_Ex03.html",
    "href": "In-class_EX/In-class_Ex03.html",
    "title": "In-class-ex03",
    "section": "",
    "text": "test test test"
  },
  {
    "objectID": "In-class_EX/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_EX/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "load packages\n\n\npacman::p_load(plotly, gt, patchwork, ggstatsplot, tidyverse, ggside, parameters,rstatix,patchwork)\n\n\nload dataset\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nqq plot\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data, aes(sample=ENGLISH))+stat_qq()+stat_qq_line()\n\nsw_t <- exam_data %>% \n  shapiro_test(ENGLISH)%>% \n  gt()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line, this is a clear indication that the set of data is not normally distributed."
  },
  {
    "objectID": "In-class_EX/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_EX/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "load package\n\n\npacman::p_load(jsonlite,tidygraph, ggraph, visNetwork, tidyverse) \n\n\nread JSON file\n\n\nMC1 <- jsonlite::fromJSON(\"D:/MITB/ISSS608/fruitpunchsamurai666/project/MC1/data/MC1.json\")\n\n\nread nodes and edge dataframe from JSON\n\n\n#read the sub-dataframe from the json file, select and rearrange the columns needed\nMC1_nodes <- as_tibble(MC1$nodes) %>% select(id, type, country)\nMC1_edges <- as_tibble(MC1$links) %>% select(source, target, type, weight, key)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications homepage.\nThis page contains all my coursework prepared for the SMU MITB course ISSS608 Visual Analytics and Applications - 2023 April Term."
  },
  {
    "objectID": "Take-home_EX/Take-home_Ex1.html",
    "href": "Take-home_EX/Take-home_Ex1.html",
    "title": "Take-home_Ex1",
    "section": "",
    "text": "In this take-home exercise, you are required to apply the concepts and methods you had learned in Lesson 1-4 to reveal the demographic and financial characteristics of the city of Engagement byusing appropriate static and interactive statistical graphics methods. This exercise requires a user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns.\nLoad packages and read datasets\n\npacman::p_load(patchwork, tidyverse, ggstatsplot, ggdist, gganimate, png, gt,plotly, ggstatsplot, ggside, parameters,rstatix,reshape2, gridExtra,ggpmisc)\n\n\nfin_data <- read_csv(\"data/FinancialJournal.csv\")\npart_data <- read_csv(\"data/Participants.csv\")\n\nData cleaning and preparation\n\nchange data types\n\n#change participantId to characters\nfin_data$participantId <- as.character(fin_data$participantId)\npart_data$participantId <- as.character(part_data$participantId)\n\n#change education level to ordinal\npart_data$educationLevel <- factor(part_data$educationLevel, ordered=TRUE, levels=c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\",\"Graduate\"))\n\nchange timestamp\n\n#save the datetime into date and month 2 formats\nfin_data$timestamp <- format(as.Date(fin_data$timestamp), \"%Y-%m-%d\")\nfin_data$Month <- format(as.Date(fin_data$timestamp), \"%m\")\n\ncreate a new table by converting financial journal to wide format, with each participant’s total amount for each category returned.\n\n# Convert financial journal to wide format\nwide_fin <- pivot_wider(fin_data, id_cols = participantId, names_from = category, values_from = amount, values_fn = sum)\n\n# fill in NA with 0s (no transaction) in the resultant table\nwide_fin[is.na(wide_fin)] <- 0\n\njoin the wide format financial journal table with the participant table to gain more insights\n\nmerged_df <- merge(part_data, wide_fin, by = 'participantId')\n\ncalculate sum of all categories\n\nmerged_df$expenses <- rowSums(merged_df[, c(\"Education\", \"Food\", \"Recreation\",\"Shelter\")])\nmerged_df$income <- rowSums(merged_df[, c(\"RentAdjustment\",\"Wage\")])\nmerged_df$sum <- rowSums(merged_df[, c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\")])\nhead(merged_df)\n\n  participantId householdSize haveKids age      educationLevel interestGroup\n1             0             3     TRUE  36 HighSchoolOrCollege             H\n2             1             3     TRUE  25 HighSchoolOrCollege             B\n3            10             3     TRUE  48 HighSchoolOrCollege             D\n4           100             2    FALSE  29                 Low             F\n5          1000             1    FALSE  56            Graduate             B\n6          1001             1    FALSE  49            Graduate             C\n    joviality      Wage   Shelter Education RentAdjustment      Food Recreation\n1 0.001626703 109816.59 -7214.852 -494.0699              0 -3141.976 -4384.0672\n2 0.328086500  96374.93 -7214.852 -494.0699              0 -3167.336 -6637.5107\n3 0.557176006  79303.82 -7291.713 -166.5618              0 -4741.141 -3088.0366\n4 0.142686163  46918.02 -7765.816    0.0000              0 -3695.506 -4425.2218\n5 0.983012498  29292.89 -6716.578    0.0000              0 -5987.265 -6466.7517\n6 0.043433461  46233.82 -5920.099    0.0000              0 -3197.202  -211.6989\n    expenses    income      sum\n1 -15234.965 109816.59 94581.62\n2 -17513.769  96374.93 78861.16\n3 -15287.452  79303.82 64016.37\n4 -15886.543  46918.02 31031.47\n5 -19170.594  29292.89 10122.29\n6  -9328.999  46233.82 36904.82\n\n\nNormality check\n\n\nJoviality qq plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(merged_df, aes(sample=joviality))+stat_qq()+stat_qq_line()\n\nsw_t <- merged_df%>% \n  shapiro_test(joviality)%>% \n  gt()\n\n\n\n\n\nFinancial summary qq plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nqq <- ggplot(merged_df, aes(sample=sum))+stat_qq()+stat_qq_line()\n\nsw_t <- merged_df%>% \n  shapiro_test(sum)%>% \n  gt()\n\n\n\n\nWe can see that the points from both joviality and financial summary (sum) deviate significantly from the straight diagonal line, this is a clear indication that joviality is not normally distributed.\n\noutlier removal\nThis step is to remove “expenses” and “income” outliers. (to retain more data, I adjusted the 75%/25% quantile (Q3/Q1) to 90% /10% quantile in the outlier formula respectively.\n\n# Calculating the upper limit and Interquartile range for \"expenses\" and \"income\"\n\nIQR_income = IQR(merged_df$income)\nIQR_exp = IQR(merged_df$expenses)\n\nincome_upper = quantile(merged_df$income,probs = 0.9)+1.5*IQR_income\nexp_lower = quantile(merged_df$expenses,probs = 0.1)-1.5*IQR_exp\n\n\n# Filtering out the outliers\nmerged <-  merged_df %>%\n           filter ((income <= income_upper) &\n          (expenses >= exp_lower))\n\n\nInteresting insights\n\nDoes have kids make a big difference in family overrall expenses?\nIs there any difference in the expense contribution for different age groups?\nIs there any difference in the expense contribution for different housesize?\nDoes higher education level lead to higher wage? box plot?\nwhich factor has the best correlation with joviality?\n\n# Define the y variable\ny_var <- merged$joviality\n\n# Define the x variables\nx_vars <- merged[, c(\"Education\", \"Food\", \"Recreation\",\"RentAdjustment\",\"Shelter\",\"Wage\")]\n\n# Reshape the data to long format\ndf <- reshape2::melt(cbind.data.frame(x_vars, y_var), id.vars = \"y_var\")\n\n# Create the plot\nggplot(df,aes(x = value, y = y_var)) +\n  geom_point(size = 1) +\n  coord_cartesian(ylim=c(0, 1))+\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~ variable, scales = \"free_x\", ncol = 3) +\n  labs(x = NULL, y = \"joviality\") +\n  ggtitle(\"joviality correlation scatter plot\") +\n  theme(plot.margin = margin(1, 1, 1, 1, \"cm\"))\n\n\n\n# Fit a linear regression model\n#model <- lm(y ~ x)\n\n# Create scatter plot with linear regression line and R-squared value\n # ggplot(data = data.frame(x, y)) +\n #  geom_point(aes(x = x, y = y)) +\n #  geom_smooth(method = \"lm\", se = FALSE, aes(x = x, y = y)) +\n #  stat_poly_eq(formula = y ~ x, aes(label = paste(stat(eq.label), stat(rr.label), sep = \"*\\\", \\\"*\"))) +\n #  labs(x = \"X\", y = \"Y\") +\n #  theme_bw()\n\nexpense pie chart or proportion of expenses by age grp.\nanimation by time\n??"
  },
  {
    "objectID": "In-class_EX/In-class_Ex05/In-class_Ex05.html#part-2---network-visualization",
    "href": "In-class_EX/In-class_Ex05/In-class_Ex05.html#part-2---network-visualization",
    "title": "In-class Exercise 5",
    "section": "Part 2 - Network Visualization",
    "text": "Part 2 - Network Visualization\n\nload package\n\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\nread data\n\n\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\nWrangling time\n\n\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nWrangling attributes by grouping by source-target-day and then removing emails that are cc to senders or only has been sent once.\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  #ungroup() is a function in the dplyr package in R that removes grouping from a grouped data frame. When data is grouped, operations are applied to each group separately. ungroup() is used to reverse the grouping operation so that subsequent operations are applied to the entire data frame as a whole.\n  ungroup()\n\n\nbuild tidygraph data model and rearrange the rows by weight in descending order\n\n\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# A tibble: 1,372 × 4\n   from    to Weekday  Weight\n  <int> <int> <ord>     <int>\n1    40    41 Saturday     13\n2    41    43 Monday       11\n3    35    31 Tuesday      10\n4    40    41 Monday       10\n5    40    43 Monday       10\n6    36    32 Sunday        9\n# ℹ 1,366 more rows\n#\n# A tibble: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\n\nplot the graph without x and y axis using Fruchterman and Reingold layout\n\n\ng <- ggraph(GAStech_graph,layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\nworking with facet (edge as an example)\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\ninteractive network graph with visNetwork\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\n\n\n#shades the nodes by assigning unique colour to each category in the group field.\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  }
]